import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id('org.springframework.boot').version('2.7.2')
    id('com.diffplug.spotless').version('6.8.0')
    id('org.openapi.generator').version('6.0.1')
}

apply from: "${rootDir}/gradle/common-dependencies/build.gradle"
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web:2.7.5')
    implementation('org.springframework.boot:spring-boot-starter-actuator:2.7.3')
    implementation('org.springframework.boot:spring-boot-starter-security:2.7.3')
    implementation('org.springframework:spring-tx:5.3.22')
    implementation('io.swagger.core.v3:swagger-annotations:2.2.2')
    // FIXME https://github.com/OpenAPITools/openapi-generator/issues/12603
    implementation('jakarta.validation:jakarta.validation-api:2.0.2')
    implementation(project(':common'))
    implementation(project(':database'))
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', "${buildDir}/openapi/gen-src/main/java"]
        }
    }
}

spotless {
    encoding('UTF-8')
    java {
        targetExclude('build/openapi/gen-src/main/java/**')
        indentWithSpaces()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        googleJavaFormat()
    }
}

// see. https://openapi-generator.tech/docs/plugins#gradle
task oaGenerate(type: GenerateTask) {
    generatorName = 'spring'
    inputSpec = "${projectDir}/openapi/index.yml"
    outputDir = "${buildDir}/openapi"
    typeMappings = [
        "string+local-date": "LocalDate",
        "string+local-datetime" : "LocalDateTime"
    ]
    importMappings = [
        "LocalDate": "java.time.LocalDate",
        "LocalDateTime": "java.time.LocalDateTime"
    ]
    configOptions = [
        "hideGenerationTimestamp": "true",
        "sourceFolder": "gen-src/main/java",
        "basePackage": "aldra.api",
        "apiPackage": "aldra.api.adapter.web.controller",
        "modelPackage": "aldra.api.adapter.web.dto",
        "skipDefaultInterface": "true",
        "oas3": "true",
        "dateLibrary": "java8",
        "delegatePattern": "false",
        "interfaceOnly": "true",
        "openApiNullable": "false",
        "useTags": "true",
        "disallowAdditionalPropertiesIfNotPresent": "false",
        "useBeanValidation": "false",
    ]
}

bootRun {
    doFirst {
        file("${rootDir}/.envrc").readLines().each {
            def (key, value) = it.split(" ")[1].tokenize("=")
            environment(key, value)
        }
    }
}
