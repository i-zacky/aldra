plugins {
    id('com.diffplug.spotless').version('6.5.0')
    id('org.flywaydb.flyway').version('8.3.0')
}

configurations {
    mbGenerate
}

dependencies {
    implementation('org.postgresql:postgresql:42.3.4')
    implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2')

    mbGenerate('org.postgresql:postgresql:42.3.4')
    mbGenerate('org.mybatis.generator:mybatis-generator-core:1.4.1')
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', "${buildDir}/mybatis/gen-src/main/java"]
        }
    }
}

spotless {
    encoding('UTF-8')
    java {
        targetExclude('build/mybatis/gen-src/main/java/**')
        indentWithSpaces()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        googleJavaFormat()
    }
    format 'xml', {
        target('config/generator-config.xml', 'src/**/*.xml')
        // https://github.com/prettier/plugin-xml
        prettier(['prettier': '2.6.2', '@prettier/plugin-xml': '2.1.0'])
            .config(['tabWidth': 4, 'printWidth': 120])
    }
}

flyway {
    driver = System.getenv("DB_JDBC_DRIVER")
    url = System.getenv("DB_JDBC_URL")
    user = System.getenv("DB_USER")
    password = System.getenv("DB_PASSWORD")
    locations = ["filesystem:${projectDir.path}/migrations"]
}

task mbGenerate() {
    doFirst {
        mkdir("${buildDir}/mybatis/gen-src/main/java")
    }
    doLast {
        ant.properties['driverClassName'] = System.getenv("DB_JDBC_DRIVER")
        ant.properties['url'] = System.getenv("DB_JDBC_URL")
        ant.properties['username'] = System.getenv("DB_USER")
        ant.properties['password'] = System.getenv("DB_PASSWORD")
        ant.properties['targetProject'] = buildDir.path + '/mybatis/gen-src/main/java'
        ant.properties['targetEntityPackage'] = 'aldra.database.domain.entity'
        ant.properties['targetMapperPackage'] = 'aldra.database.domain.repository'
        ant.taskdef(name: 'mbGenerator', classname: 'org.mybatis.generator.ant.GeneratorAntTask', classpath: configurations.mbGenerate.asPath)
        ant.mbGenerator(overwrite: true, configFile: "${projectDir.path}/config/generator-config.xml", verbose: true) {
            propertyset {
                propertyref(name: 'driverClassName')
                propertyref(name: 'url')
                propertyref(name: 'username')
                propertyref(name: 'password')
                propertyref(name: 'targetProject')
                propertyref(name: 'targetEntityPackage')
                propertyref(name: 'targetMapperPackage')
            }
        }
    }
}
